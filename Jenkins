// Declarative pipelines must be enclosed with a "pipeline" directive.
pipeline {
    // This line is required for declarative pipelines. Just keep it here.
    agent any
    // This section contains environment variables which are available for use in the
    // pipeline's stages.
    environment {
        region = "us-east-1"
    }
    
    // Here you can define one or more stages for your pipeline.
    // Each stage can execute one or more steps.
    stages {
        // This is a stage.
        stage('Build') {
            steps {
                // Get SHA1 of current commit
                script {
                    commit_id = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                }
                 // Build the Docker image
                //sh "gradle clean build" 
                sh "docker build -f ./Dockerfile -t ${docker_repo_uri}:${environment_tag}-${commit_id} ."
                // Get Docker login credentials for ECR
                sh "aws ecr get-login --no-include-email --region ${region} | sh"
                // Push Docker image
                sh "docker push ${docker_repo_uri}:${environment_tag}-${commit_id}"
                // Clean up
                sh "docker rmi -f ${docker_repo_uri}:${environment_tag}-${commit_id}"

            }
        }
        stage('Deploy') {
            steps {
                // Override image field in taskdef file
                sh "sed -i 's|{{image}}|${docker_repo_uri}:${environment_tag}-${commit_id}|' ./taskdef.json"

                sh "sed -i 's|{{jobRoleArn}}|${jobRoleArn}|' ./taskdef.json"
                
                sh "sed -i 's|{{jobDefArn}}|${jobDefArn}|' ./taskdef.json"
                
                sh "cat ./taskdef.json"
                
                // create jon definition 
                sh "aws batch register-job-definition --job-definition-name automation-${commit_id} --cli-input-json file://./taskdef.json --region ${region}"
            }
        }         
         
    }
}
