pipeline {
    agent any
    tools {
        gradle "${gradle_version}"
    }
    stages {
        stage('Gradle') {
            steps {
	    	// Get SHA1 of current commit
                script {
                    commit_id = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                }
                sh 'gradle --version'
                sh 'gradle clean build'
                sh "docker build -f ./Dockerfile -t ${docker_repo_uri}:${environment_tag}-${commit_id} ."
		// Get Docker login credentials for ECR
		sh "aws ecr get-login --no-include-email --region ${region} | sh"
		// Push Docker image
		sh "docker push ${docker_repo_uri}:${environment_tag}-${commit_id}"
		// Clean up
		sh "docker rmi -f ${docker_repo_uri}:${environment_tag}-${commit_id}"
            }
        }
        stage('Deploy') {
            steps {
                // Override image field in taskdef file
                sh "sed -i 's|{{image}}|${docker_repo_uri}:${environment_tag}-${commit_id}|' ./taskdef.json"

                sh "sed -i 's|{{jobRoleArn}}|${jobRoleArn}|' ./taskdef.json"
                
                sh "sed -i 's|{{jobDefArn}}|${jobDefArn}|' ./taskdef.json"
                
                sh "cat ./taskdef.json"
                
                // create jon definition 
                sh "aws batch register-job-definition --job-definition-name ${job_name} --cli-input-json file://./taskdef.json --region ${region}"
                
                sh "aws batch submit-job --job-name ${job_name} --job-queue ${job_queue_name} --job-definition ${job_name} --region ${region}"
            }
        }      
    }
}
