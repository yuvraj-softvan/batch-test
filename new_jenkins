pipeline {
    agent any
    tools {
        gradle "gradle 4.10.2"
    }
    stages {
        stage('Gradle') {
            steps {
                sh 'gradle --version'
                sh 'gradle clean build'
                sh "docker build -f ./Dockerfile -t ${docker_repo_uri}:${environment_tag}-${commit_id} ."
		        // Get Docker login credentials for ECR
		        sh "aws ecr get-login --no-include-email --region ${region} | sh"
		        // Push Docker image
		        sh "docker push ${docker_repo_uri}:${environment_tag}-${commit_id}"
		        // Clean up
		        sh "docker rmi -f ${docker_repo_uri}:${environment_tag}-${commit_id}"
            }
        }
        stage('Deploy') {
            steps {
                // Override image field in taskdef file
                sh "sed -i 's|{{image}}|${docker_repo_uri}:${environment_tag}-${commit_id}|' ./taskdef.json"

                sh "sed -i 's|{{jobRoleArn}}|${jobRoleArn}|' ./taskdef.json"
                
                sh "sed -i 's|{{jobDefArn}}|${jobDefArn}|' ./taskdef.json"
                
                sh "cat ./taskdef.json"
                
                // create jon definition 
                sh "aws batch register-job-definition --job-definition-name payfacto-auto-test --cli-input-json file://./taskdef.json --region ${region}"
                
                sh "aws batch submit-job --job-name payfacto-auto-submit --job-queue payfacto-queue --job-definition payfacto-auto-test --region ${region}"
            }
        }      
    }
}
